{"version":3,"sources":["stores/api/shared/actions.js","pages/Feature/Addresses/AddressesList/components/dialogs/ConfirmVoidAddressDialog/index.js","pages/Feature/Addresses/AddressesList/components/dialogs/ConfirmUpdateAddressDialog/index.js","pages/Feature/Addresses/AddressesList/components/tables/PendingAddress/index.js","pages/Feature/Addresses/AddressesList/components/dialogs/PreviousAddressListDialog/index.js","pages/Feature/Addresses/AddressesList/components/tables/CurrentAddress/index.js","pages/Feature/Addresses/AddressesList/components/dialogs/AddAddressDialog/index.js","pages/Feature/Addresses/AddressesList/index.js"],"names":["getNeedsReviewCompliance","payload","resolve","reject","type","getComplianceDetail","getAllMilestones","getInvoices","markPaid","downloadAllMilestones","downloadInvoices","getApprovedCompliance","getDeniedCompliance","getPreGrants","getActiveGrants","getPendingGrants","getCompletedGrants","getVoteDetail","getVoteResult","getUserNotVoted","getProposalDetail","approveCompliance","denyCompliance","remindGA","resendGA","getMilestoneProposals","getMilestoneUsers","getMetrics","getDosFee","downloadDosFee","getPendingAddresses","getCurrentAddresses","getVAUsers","addAddress","voidAddress","confirmAddress","ConfirmVoidAddressDialog","addressId","close","dispatch","useDispatch","useState","loading","setLoading","Header","Body","className","color","onClick","data","isLoading","disabled","ConfirmUpdateAddressDialog","AddressTable","forceReloadList","reloadCurrentAddressList","useTable","register","hasMore","appendData","setHasMore","setPage","openDialog","useDialog","fetchData","results","isHasMore","prev","useEffect","onLoadMore","dataLength","length","HeaderCell","map","val","BodyRow","BodyCell","id","email","cspr_address","formatDate","created_at","size","afterClosed","result","PendingAddressTable","reload","setReload","setTimeout","PreviousAddressListDialog","list","reverse","index","updated_at","request_ip","CurrentAddressTable","user_id","listAddressChanged","payment_address_changes","schema","yup","shape","required","AddAddressDialog","useForm","mode","resolver","yupResolver","formState","errors","isValid","handleSubmit","control","users","setUsers","newUsersArr","user","value","label","onSubmit","name","render","field","onChange","placeholder","options","message","AddressesList","PendingAddress","CurrentAddress"],"mappings":"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","file":"static/js/8.9279ee06.chunk.js","sourcesContent":["export const getNeedsReviewCompliance = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_NEEDS_REVIEW_COMP',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getComplianceDetail = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_COMPLIANCE_DETAIL',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getAllMilestones = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_ALL_MILESTONES',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getInvoices = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_INVOICES',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const markPaid = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'MARK_PAID',\n  payload,\n  resolve, \n  reject,\n});\n\n\nexport const downloadAllMilestones = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'DOWNLOAD_ALL_MILESTONES',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const downloadInvoices = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'DOWNLOAD_INVOICES',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getApprovedCompliance = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_APPROVED_COMP',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getDeniedCompliance = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_DENIED_COMP',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getPreGrants = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_PRE_GRANTS',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getActiveGrants = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_ACTIVE_GRANTS',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getPendingGrants = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_PENDING_GRANTS',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getCompletedGrants = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_COMPLETED_GRANTS',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getVoteDetail = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_VOTE_DETAIL',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getVoteResult = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_VOTE_RESULT',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getUserNotVoted = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_USER_NOT_VOTED',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getProposalDetail = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_PROPOSAL_DETAIL',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const approveCompliance = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'APPROVE_COMPLIANCE',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const denyCompliance = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'DENY_COMPLIANCE',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const remindGA = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'REMIND_GA',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const resendGA = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'RESEND_GA',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getMilestoneProposals = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_MILESTONE_PROPOSALS',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getMilestoneUsers = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_MILESTONE_USERS',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getMetrics = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_METRICS',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getDosFee = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_DOS_FEE',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const downloadDosFee = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'DOWNLOAD_DOS_FEE',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const getPendingAddresses = (resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_PENDING_ADDRESSES',\n  resolve, \n  reject,\n});\n\nexport const getCurrentAddresses = (resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_CURRENT_ADDRESSES',\n  resolve, \n  reject,\n});\n\nexport const getVAUsers = (resolve = () => {}, reject = () => {}) => ({\n  type: 'GET_VA_USERS',\n  resolve, \n  reject,\n});\n\nexport const addAddress = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'ADD_ADDRESS',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const updateAddress = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'UPDATE_ADDRESS',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const voidAddress = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'VOID_ADDRESS',\n  payload,\n  resolve, \n  reject,\n});\n\nexport const confirmAddress = (payload, resolve = () => {}, reject = () => {}) => ({\n  type: 'CONFIRM_ADDRESS',\n  payload,\n  resolve, \n  reject,\n});\n","import React, { useState } from 'react';\nimport { Button, Dialog } from '@shared/partials';\nimport { useDispatch } from 'react-redux';\nimport { voidAddress } from '@stores/api/shared/actions';\n\nconst ConfirmVoidAddressDialog = ({addressId, close}) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState();\n\n  const triggerVoid = (data) => {\n    setLoading(true);\n    dispatch(\n      voidAddress(\n        addressId,\n        () => {\n          setLoading(false);\n          close(true);\n        },\n        () => {\n          setLoading(false);\n        }\n      )\n    );\n  };\n  return (\n    <Dialog>\n      <Dialog.Header>\n        Are you sure you want to void this request?\n      </Dialog.Header>\n      <Dialog.Body>\n        <p className=\"text-sm pb-10 text-center\">The users address will NOT be updated and this request will be deleted.</p>\n        <Button type=\"submit\"\n          className=\"mx-auto block !w-3/5 mb-2.5 px-6\"\n          color=\"primary\"\n          onClick={triggerVoid}\n          isLoading={loading}\n          disabled={loading}\n        >\n          Confirm  \n        </Button>\n        <button type=\"button\" className=\"mx-auto block text-xs underline\" onClick={() => close(false)}>Cancel</button>\n      </Dialog.Body>\n    </Dialog>\n  );\n};\n\nexport default ConfirmVoidAddressDialog;","import React, { useState } from 'react';\nimport { Button, Dialog } from '@shared/partials';\nimport { useDispatch } from 'react-redux';\nimport { confirmAddress } from '@stores/api/shared/actions';\n\nconst ConfirmUpdateAddressDialog = ({addressId, close}) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState();\n\n  const triggerConfirm = (data) => {\n    setLoading(true);\n    dispatch(\n      confirmAddress(\n        addressId,\n        () => {\n          setLoading(false);\n          close(true);\n        },\n        () => {\n          setLoading(false);\n        }\n      )\n    );\n  };\n\n  return (\n    <Dialog>\n      <Dialog.Header>\n        Are you sure you want to confirm the address update?\n      </Dialog.Header>\n      <Dialog.Body>\n        <p className=\"text-sm pb-10 text-center\">We recommend reaching out to the VA first to confirm this new address and making sure the payment systems are updated to include this new address on the whitelist first.</p>\n        <Button type=\"submit\"\n          className=\"mx-auto block !w-3/5 mb-2.5 px-6\"\n          color=\"primary\"\n          onClick={triggerConfirm}\n          isLoading={loading}\n          disabled={loading}\n        >\n          Confirm\n        </Button>\n        <button type=\"button\" className=\"mx-auto block text-xs underline\" onClick={() => close(false)}>Cancel</button>\n      </Dialog.Body>\n    </Dialog>\n  );\n};\n\nexport default ConfirmUpdateAddressDialog;","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Table, Button, useTable, useDialog } from '@shared/partials';\nimport { getPendingAddresses } from '@stores/api/shared/actions';\nimport { formatDate } from '@shared/core/utils';\nimport ConfirmVoidAddressDialog from '../../dialogs/ConfirmVoidAddressDialog';\nimport ConfirmUpdateAddressDialog from '../../dialogs/ConfirmUpdateAddressDialog';\nimport './style.scss';\n\nconst AddressTable = ({forceReloadList, reloadCurrentAddressList}) => {\n  const {\n    data,\n    register,\n    hasMore,\n    appendData,\n    setHasMore,\n    setPage,\n  } = useTable();\n  const { openDialog } = useDialog();\n  const dispatch = useDispatch();\n\n  const fetchData = () => {\n    dispatch(\n      getPendingAddresses((results, isHasMore) => {\n        setHasMore(isHasMore);\n        appendData(results);\n        setPage(prev => prev + 1);\n      })\n    );\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const triggerAvoidAddress = (addressId) => {\n    openDialog(\n      <ConfirmVoidAddressDialog addressId={addressId} afterClosed={(result) => forceReloadList(result)} />\n    );\n  };\n\n  const triggerConfirmUpdateAddress = (addressId) => {\n    openDialog(\n      <ConfirmUpdateAddressDialog addressId={addressId} afterClosed={(result) => {\n        forceReloadList(result)\n        reloadCurrentAddressList(result)\n      }} />\n    );\n  };\n\n  return (\n    <Table\n        {...register}\n      className=\"pending-address-table h-full\"\n      onLoadMore={fetchData}\n      hasMore={hasMore}\n      dataLength={data.length}>\n      <Table.Header>\n        <Table.HeaderCell>\n          <p>UserID</p>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <p>Email</p>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <p>CSPR Address</p>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <p>Request Date</p>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <p>Action</p>\n        </Table.HeaderCell>\n      </Table.Header>\n      <Table.Body className=\"padding-tracker\">\n        {data.map(val => (\n          <Table.BodyRow key={val.id}>\n            <Table.BodyCell>\n              <p>{val.id}</p>\n            </Table.BodyCell>\n            <Table.BodyCell>\n              <p>{val.email}</p>\n            </Table.BodyCell>\n            <Table.BodyCell>\n              <p>{val.cspr_address}</p>\n            </Table.BodyCell>\n            <Table.BodyCell>\n              <p>{formatDate(val.created_at)}</p>\n            </Table.BodyCell>\n            <Table.BodyCell>\n              <div className=\"flex justify-between gap-2\">\n                <Button color=\"primary\" size=\"xs\" onClick={() => triggerConfirmUpdateAddress(val.id)}>Confirm Update</Button>\n                <Button color=\"primary-outline\" size=\"xs\" onClick={() => triggerAvoidAddress(val.id)}>Void</Button>\n              </div>\n            </Table.BodyCell>\n          </Table.BodyRow>\n        ))}\n      </Table.Body>\n    </Table>\n  )\n}\n\nconst PendingAddressTable = ({reloadCurrentAddressList}) => {\n  const [reload, setReload] = useState();\n  const forceReloadList = (result) => {\n    if (result) {\n      setReload(true);\n      setTimeout(() => {\n        setReload(false);\n      }, 100);\n    }\n  }\n  \n  return (\n    <>\n      {!reload && <AddressTable forceReloadList={forceReloadList} reloadCurrentAddressList={reloadCurrentAddressList} />}\n    </>   \n  )\n};\n\nexport default PendingAddressTable;\n","import React, { useEffect } from 'react';\nimport { Dialog, Table, useTable } from '@shared/partials';\nimport { formatDate } from '@shared/core/utils';\nimport './style.scss';\n\nconst PreviousAddressListDialog = ({ list, close }) => {\n  const {\n    data,\n    register,\n    hasMore,\n    appendData,\n    setHasMore,\n    setPage,\n  } = useTable();\n\n  const fetchData = () => {\n    setTimeout(() => {\n      setHasMore(false);\n      appendData(list.reverse());\n      setPage(prev => prev + 1);\n    }, 500);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Dialog>\n      <Dialog.Header>\n        Addresses and previous changes\n      </Dialog.Header>\n      <Dialog.Body>\n        <Table\n          {...register}\n          className=\"previous-address-table h-full\"\n          onLoadMore={fetchData}\n          hasMore={hasMore}\n          dataLength={data.length}\n        >\n          <Table.Header>\n            <Table.HeaderCell>\n              <p>Address</p>\n            </Table.HeaderCell>\n            <Table.HeaderCell>\n              <p>Date Changed</p>\n            </Table.HeaderCell>\n            <Table.HeaderCell>\n              <p>Request IP</p>\n            </Table.HeaderCell>\n          </Table.Header>\n          <Table.Body className=\"padding-tracker\">\n            {data.map((val, index) => (\n              <Table.BodyRow key={val.id}>\n                <Table.BodyCell>\n                  <p className=\"txt-start\">{val.cspr_address}</p>\n                </Table.BodyCell>\n                <Table.BodyCell>\n                  <p>{index === 0 ? `Current` : formatDate(val.updated_at)}</p>\n                </Table.BodyCell>\n                <Table.BodyCell>\n                  <p>{val.request_ip}</p>\n                </Table.BodyCell>\n              </Table.BodyRow>\n            ))}\n          </Table.Body>\n        </Table>\n      </Dialog.Body>\n      <button type=\"button\" className=\"mx-auto mt-4 block text-xs underline\" onClick={() => close(false)}>Cancel</button>\n    </Dialog>\n  );\n};\n\nexport default PreviousAddressListDialog;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getCurrentAddresses } from '@stores/api/shared/actions';\nimport { Table, useTable, useDialog } from '@shared/partials';\nimport { formatDate } from '@shared/core/utils';\nimport PreviousAddressListDialog from '../../dialogs/PreviousAddressListDialog';\n\nimport './style.scss';\n\nconst CurrentAddressTable = () => {\n  const {\n    data,\n    register,\n    hasMore,\n    appendData,\n    setHasMore,\n    setPage,\n  } = useTable();\n  const { openDialog } = useDialog();\n  const dispatch = useDispatch();\n\n  const fetchData = () => {\n    dispatch(\n      getCurrentAddresses((results, isHasMore) => {\n        setHasMore(isHasMore);\n        appendData(results);\n        setPage(prev => prev + 1);\n      })\n    );\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const triggerPreviousAddress = (listAddressChanged) => {\n    openDialog(\n      <PreviousAddressListDialog list={listAddressChanged} />\n    );\n  };\n\n  return (\n    <Table\n        {...register}\n      className=\"current-address-table h-full\"\n      onLoadMore={fetchData}\n      hasMore={hasMore}\n      dataLength={data.length}>\n      <Table.Header>\n        <Table.HeaderCell>\n          <p>UserID</p>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <p>Email</p>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <p>CSPR Address</p>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <p>Updated Date</p>\n        </Table.HeaderCell>\n      </Table.Header>\n      <Table.Body className=\"padding-tracker\">\n        {data.map(val => (\n          <Table.BodyRow key={val.id}>\n            <Table.BodyCell>\n              <p>{val.user_id}</p>\n            </Table.BodyCell>\n            <Table.BodyCell>\n              <p>{val.email}</p>\n            </Table.BodyCell>\n            <Table.BodyCell>\n              <p className=\"underline pointer\" onClick={() => triggerPreviousAddress(val.payment_address_changes)}>{val.cspr_address}</p>\n            </Table.BodyCell>\n            <Table.BodyCell>\n              <p>{formatDate(val.updated_at)}</p>\n            </Table.BodyCell>\n          </Table.BodyRow>\n        ))}\n      </Table.Body>\n    </Table>\n  )\n};\n\nexport default CurrentAddressTable;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { Button, Dialog, Select } from '@shared/partials';\nimport { getVAUsers, addAddress } from '@stores/api/shared/actions';\n\nconst schema = yup.object().shape({\n  user_id: yup\n    .string()\n    .required('User is required'),\n  cspr_address: yup\n    .string()\n    .required('Address is required')\n});\n\nconst AddAddressDialog = ({close}) => {\n  const {\n    formState: {errors, isValid},\n    register,\n    handleSubmit,\n    control\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(schema),\n  });\n  const dispatch = useDispatch();\n  \n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState();\n\n  const fetchVAUsers = () => {\n    dispatch(\n      getVAUsers((users) => {\n        const newUsersArr = users.map(user => {\n          return {\n            value: `${user.id}`,\n            label: user.email,\n          }\n        });\n        setUsers(newUsersArr);\n      })\n    );\n  };\n\n  useEffect(() => {\n    fetchVAUsers();\n  }, []);\n\n  const onSubmit = (data) => {\n    setLoading(true);\n    dispatch(\n      addAddress(\n        data, \n        () => {\n          setLoading(false);\n          close(true);\n        },\n        () => {\n          setLoading(false);\n        }\n      )\n    );\n  };\n\n  return (\n    <Dialog>\n      <Dialog.Header>\n        Please select a user by their email from the dropdown\n      </Dialog.Header>\n      <Dialog.Body>\n        <form className=\"text-center\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"form-control\">\n            <Controller\n              control={control}\n              name={\"user_id\"}\n              render={({ field: { onChange, value } }) => (\n                <Select\n                  placeholder={'Select User'}\n                  options={users}\n                  onChange={(data) => onChange(data.value)}\n                  value={value}\n                />\n              )}\n            / >\n            <p className=\"form-error\">\n              {errors.user_id?.message}\n            </p>\n          </div>\n          <div className=\"form-control\">\n            <input placeholder=\"Enter CSPR address\" {...register('cspr_address')} />\n            <p className=\"form-error\">\n              {errors.cspr_address?.message}\n            </p>\n          </div>\n          <div>\n            <Button type=\"submit\" isLoading={loading} className=\"mx-auto block !w-3/5 mb-2.5 px-6\" color=\"primary\" disabled={!isValid || loading}>Confirm</Button>\n            <button type=\"button\" className=\"mx-auto block text-xs underline\" onClick={() => close(false)}>Cancel</button>\n          </div>\n        </form>\n      </Dialog.Body>\n    </Dialog>\n  );\n};\n\nexport default AddAddressDialog;","import React, { useState } from 'react';\nimport { Card, CardHeader, CardBody, Button, useDialog } from '@shared/partials';\nimport PendingAddressTable from './components/tables/PendingAddress';\nimport CurrentAddressTable from './components/tables/CurrentAddress';\nimport AddAddressDialog from './components/dialogs/AddAddressDialog';\n\nconst AddressesList = () => {\n  const { openDialog } = useDialog();\n  const [reload, setReload] = useState();\n\n  const forceReloadList = (result) => {\n    if (result) {\n      setReload(true);\n      setTimeout(() => {\n        setReload(false);\n      }, 100);\n    }\n  }\n\n  const triggerAddAddress = () => {\n    openDialog(\n      <AddAddressDialog afterClosed={(result) => forceReloadList(result)} />\n    );\n  }\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <Card className=\"flex-1 min-h-0 mb-5\">\n        <CardHeader>\n          <h2>Pending Address changes</h2>\n        </CardHeader>\n        <CardBody>\n          <PendingAddressTable reloadCurrentAddressList={forceReloadList} />\n        </CardBody>\n      </Card>\n      <Card className=\"flex-1 min-h-0\">\n        <CardHeader>\n          <div className=\"flex justify-between\">\n            <h2>Current user addresses</h2>\n            <Button className=\"ml-5\" color=\"primary\" size=\"xs\" onClick={triggerAddAddress}>Add address to unlisted user</Button>\n          </div>\n        </CardHeader>\n        <CardBody>\n          {!reload && <CurrentAddressTable />}\n        </CardBody>\n      </Card>\n    </div>\n  )\n};\n\nexport default AddressesList;\n"],"sourceRoot":""}